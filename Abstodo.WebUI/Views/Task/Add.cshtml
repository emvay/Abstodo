@using Abstodo.Entities.Concrete
@{
    ViewData["Title"] = "Add";
    @model AddTaskViewModel // Adjust the namespace accordingly
    // Project project=
}


<div class="text-center pt-3 pb-2">
    <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-todo-list/check1.webp"
         alt="Check" width="60">
    <h2 class="my-4">Add a new Task</h2>
</div>

<div class="container-fluid mt-3 w3-border w3-padding w3-round text-white mb-0 rounded">
    <form method="post" asp-action="Add">
        <!-- Assuming you have a Create action in your controller -->

        <div class="form-floating mb-3 mt-3">
            <input asp-for="taskModel.Description" class="form-control" style="margin-top:5px!important" placeholder="Enter Description">
            <label class="text-black" asp-for="taskModel.Description">Description</label>
        </div>

        <div class="row">
            <div class="mt-2 mb-2 col">
                <label asp-for="taskModel.PriorityID" class="text-white">Priority</label>
                <select asp-for="taskModel.PriorityID" class="form-control" style="margin-top:5px!important" placeholder="Enter Priority">
                    <option value="1">Low</option>
                    <option value="2">Medium</option>
                    <option value="3">High</option>
                    <!-- Add other project options as needed -->
                </select>
            </div>

            <div class="mt-2 mb-2 col">
                <label asp-for="taskModel.DueDate" class="text-white">Due Date</label>
                <input asp-for="taskModel.DueDate" type="date" class="form-control" />
            </div>
        </div>

        <div class="row">
            <div class="mt-2 mb-2 col">
                <label asp-for="taskModel.ProjectID" class="text-white">Project</label>
                <select asp-for="taskModel.ProjectID" class="form-control" style="margin-top:5px!important" placeholder="Enter Project">
                    @if (Model.projectModels is not null)
                    {
                        @foreach (ProjectModel project in Model.projectModels)
                        {
                            <option value="@(project.ID)">@project.Title</option>
                        }
                    }
                    <!-- Add other project options as needed -->
                </select>
            </div>

            <div class="mt-2 mb-2 col">
                <label asp-for="taskModel.StatusID" class="text-white">Status</label>
                <select asp-for="taskModel.StatusID" class="form-control">
                    @foreach (var status in Enum.GetValues(typeof(StatusEnum)))
                    {
                        <option value="@((int)status)">@status</option>
                    }
                </select>
            </div>
        </div>

        <button type="submit" class="btn btn-primary mt-2 mb-2">Submit</button>
    </form>
</div>