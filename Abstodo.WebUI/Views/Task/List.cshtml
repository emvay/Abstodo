@using Abstodo.Entities.Concrete
@{
    ViewData["Title"] = "Home Page";
    @model List<TaskModel> // Adjust the namespace accordingly
    TaskModel asd = new TaskModel();
}
@section EditModal
{
    <!-- Edit Modal -->
    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Edit Modal</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Testing Modal
                    <form method="post" asp-action="Update">
                        <!-- Assuming you have a Create action in your controller -->
                        <input type="hidden" asp-for="@asd.ID" id="updateTaskId">
                        <div class="form-floating mb-3 mt-3">
                            <input asp-for="@asd.Description" class="form-control" style="margin-top:5px!important" placeholder="Enter Description">
                            <label class="text-black" asp-for="@asd.Description">Description</label>
                        </div>

                        <div class="row">
                            <div class="mt-2 mb-2 col">
                                <label asp-for="@asd.PriorityID" class="text-white">Priority</label>
                                <select asp-for="@asd.PriorityID" class="form-control" style="margin-top:5px!important" placeholder="Enter Priority">
                                    <option value="1">Low</option>
                                    <option value="2">Medium</option>
                                    <option value="3">High</option>
                                    <option value="4">Critical</option>
                                </select>
                            </div>

                            <div class="mt-2 mb-2 col">
                                <label asp-for="@asd.DueDate" class="text-white">Due Date</label>
                                <input asp-for="@asd.DueDate" type="date" class="form-control" />
                            </div>
                        </div>

                        <div class="row">
                            <div class="mt-2 mb-2 col">
                                <label asp-for="@asd.ProjectID" class="text-white">Project</label>
                                <select asp-for="@asd.ProjectID" class="form-control" style="margin-top:5px!important" placeholder="Enter Project">
                                    <option value="1">Abstodo</option>
                                    <!-- Add other project options as needed -->
                                </select>
                            </div>

                            <div class="mt-2 mb-2 col">
                                <label asp-for="@asd.StatusID" class="text-white">Status</label>
                                <select asp-for="@asd.StatusID" class="form-control" style="margin-top:5px!important" placeholder="Enter Status">
                                    <option value="1">To Do</option>
                                    <option value="2">In Progress</option>
                                    <option value="3">Done</option>
                                    <option value="4">Removed</option>
                                    <!-- Add other status options as needed -->
                                </select>
                            </div>
                        </div>

                        <button type="submit" class="btn btn-primary mt-2 mb-2">Update</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </div>
        </div>
    </div>
    <!-- End of Edit Modal -->
}
@section DeleteModal
{
    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Task Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="hiddenTaskId" name="hiddenTaskId" />
                    <label id="lblDeleteProject" style="display: block; "></label><br />
                    <label id="lblDeleteDescription" style="display: block; "></label><br />
                    <label id="lblDeleteStatus" style="display: block; "></label><br />
                    
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
                    <button type="button" id="confirmDeleteButton" onclick="return Delete();" data-task-id="2" class="btn btn-danger">Delete</button>
                </div>
            </div>
        </div>
    </div>
    <!-- End of Delete Confirmation Modal  -->
}

@section CompleteTaskModal
{
    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="completeTaskModal" tabindex="-1" role="dialog" aria-labelledby="completeTaskModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="completeTaskModalLabel">Complete Task</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="hiddenTaskId" name="hiddenTaskId" />
                    <span>Are you sure about that?</span>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                    <button type="submit" id="btnAdd" onclick="return Complete();" class="btn btn-primary">Complete</button>
                </div>
            </div>
        </div>
    </div>
    <!-- End of Delete Confirmation Modal  -->
}

@section myModal
{
    <!-- AddModal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addModalLabel">Add/Update</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <!-- Assuming you have a Create action in your controller -->
                        <input type="hidden" id="ID" name="ID" />
                        <div class="form-floating mb-3 mt-3">
                            <input id="Description" class="form-control" style="margin-top:5px!important" placeholder="Enter Description">
                            <label class="text-black" for="Description">Description</label>
                        </div>

                        <div class="row">
                            <div class="mt-2 mb-2 col">
                                <label for="PriorityID" class="text-white">Priority</label>
                                <select id="PriorityID" class="form-control" style="margin-top:5px!important" placeholder="Enter Priority">
                                    <option value="1">Low</option>
                                    <option value="2">Medium</option>
                                    <option value="3">High</option>
                                    <option value="4">Critical</option>
                                </select>
                            </div>

                            <div class="mt-2 mb-2 col">
                                <label for="DueDate" class="text-white">Due Date</label>
                                <input id="DueDate" type="datetime-local" class="form-control" />
                            </div>
                        </div>

                        <div class="row">
                            <div class="mt-2 mb-2 col">
                                <label for="ProjectID" class="text-white">Project</label>
                                <select id="ProjectID" class="form-control" style="margin-top:5px!important" placeholder="Enter Project">
                                    <option value="1">Abstodo</option>
                                    <!-- Add other project options as needed -->
                                </select>
                            </div>
                            <div class="mt-2 mb-2 col">
                                <label for="StatusID" class="text-white">Status</label>
                                <select id="StatusID" class="form-control" style="margin-top:5px!important" placeholder="Enter Priority">
                                    <option value="1">To Do</option>
                                    <option value="2">In Progress</option>
                                    <option value="3">Done</option>
                                </select>
                            </div>
                        </div>

                       @*  <button type="submit" class="btn btn-primary mt-2 mb-2">Add</button> *@
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" onclick="return Clear();" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="btnUpdate" style="display:none;" onclick="return Update();">Update</button>
                    <button type="submit" id="btnAdd" onclick="return Add();" class="btn btn-primary">Add</button>
                </div>
            </div>
        </div>
    </div>
    <!-- End of myModal  -->
}


<div class="text-center pt-3 pb-2">
    <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-todo-list/check1.webp"
         alt="Check" width="60">
    <h2 class="my-4">Task List</h2>
</div>

<a href="#" class="text-decoration-none get-task" data-bs-toggle="modal" data-bs-target="#myModal" title="Add">
    <i class="bi fs-4 ps-1 text-success bi-plus">Add New Task</i>
</a>
<span>   Welcomme @User.Identity.Name</span>

@* <div class="accordion" id="accordionExample">
    <div class="accordion-item">
        <h2 class="accordion-header" id="headingOne">
            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                Open Tasks
            </button>
        </h2>
        <div id="collapseOne" class="accordion-collapse" aria-labelledby="headingOne" data-bs-parent="#accordionExample" style="">
            <div class="accordion-body"> *@
                <table class="table text-white mb-0 rounded">
                    <thead>
                        <tr>
                            <th scope="col">Status</th>
                            <th scope="col">Description</th>
                            <th scope="col">Priority</th>
                            <th scope="col">Due Date</th>
                            <th scope="col">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="tbody opentasks">
                        @* @foreach (var task in Model)
                        {

                        <tr class="fw-normal">

                        <th>
                        <span class="ms-2">@Enum.GetName(typeof(StatusEnum), @task.StatusID)</span>
                        </th>
                        <td class="align-middle">
                        <span>@task.Description</span>
                        </td>
                        <td class="align-middle">
                        <h6 class="mb-0"><span class="badge @(GetPriorityClass(@task.PriorityID))">@task.PriorityID priority</span></h6>
                        </td>
                        <td class="align-middle">
                        <a href="#!" class="text-decoration-none" data-mdb-toggle="tooltip" title="Done">
                        <i class="bi fs-5 ps-1 text-success bi-check2-circle"></i>
                        </a>
                        <a href="#!" class="text-decoration-none get-update-task" data-mdb-toggle="tooltip" data-bs-toggle="modal" data-task-id="@task.ID" data-bs-target="#editModal" title="Edit">
                        <i class="bi fs-5 ps-1 text-warning bi-pencil-square"></i>
                        </a>
                        <a href="#" class="text-decoration-none get-task" data-bs-toggle="modal" data-bs-target="#deleteModal" data-task-id="@task.ID" title="Remove">
                        <i class="bi fs-5 ps-1 text-danger bi-trash"></i>
                        </a>
                        </td>
                        </tr>
                        } *@
                    </tbody>
                </table>
@*             </div>
        </div>
    </div>
</div> *@
<div class="accordion" id="accordionExample2">
    <div class="accordion-item">
        <h2 class="accordion-header" id="headingTwo">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                Completed Tasks
            </button>
        </h2>
        <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample2" style="">
            <div class="accordion-body">
                <table class="table text-white mb-0 rounded">
                    <thead>
                        <tr>
                            <th scope="col">Status</th>
                            <th scope="col">Description</th>
                            <th scope="col">Priority</th>
                            <th scope="col">Due Date</th>
                            <th scope="col">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="tbody completedtasks">
                        @* @foreach (var task in Model)
                        {

                        <tr class="fw-normal">

                        <th>
                        <span class="ms-2">@Enum.GetName(typeof(StatusEnum), @task.StatusID)</span>
                        </th>
                        <td class="align-middle">
                        <span>@task.Description</span>
                        </td>
                        <td class="align-middle">
                        <h6 class="mb-0"><span class="badge @(GetPriorityClass(@task.PriorityID))">@task.PriorityID priority</span></h6>
                        </td>
                        <td class="align-middle">
                        <a href="#!" class="text-decoration-none" data-mdb-toggle="tooltip" title="Done">
                        <i class="bi fs-5 ps-1 text-success bi-check2-circle"></i>
                        </a>
                        <a href="#!" class="text-decoration-none get-update-task" data-mdb-toggle="tooltip" data-bs-toggle="modal" data-task-id="@task.ID" data-bs-target="#editModal" title="Edit">
                        <i class="bi fs-5 ps-1 text-warning bi-pencil-square"></i>
                        </a>
                        <a href="#" class="text-decoration-none get-task" data-bs-toggle="modal" data-bs-target="#deleteModal" data-task-id="@task.ID" title="Remove">
                        <i class="bi fs-5 ps-1 text-danger bi-trash"></i>
                        </a>
                        </td>
                        </tr>
                        } *@
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>




<!-- Button trigger modal -->
@* <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
    Launch demo modal
</button> *@



@* <div class="text-center text-white">
    <h1 class="display-4">Hello Da Worldo!!!</h1>

</div> *@

@functions {
    public string GetPriorityClass(int priorityID)
    {
        switch (priorityID)
        {
            case 3:
                return "bg-danger";
            case 2:
                return "bg-warning";
            case 1:
                return "bg-success";
            default:
                return string.Empty;
        }
    }
}

<script>
    $(document).ready(function () {
        var taskId;
        $('.get-task').click(function () {
            taskId = $(this).data('task-id'); // Retrieve task ID
            // Store the task ID in a hidden input in the modal
        });
        $(".remove-task-confirmation").click(function (e) {
            //var taskId = $('#confirmDeleteModal').data('task-id');
            e.preventDefault(); // Prevent default action of the link
            //var taskId = $(this).data("task-id");  // Get the task ID from data attribute
            $.ajax(
                {
                    url: '@Url.Action("Remove", "Task")', // URL to the Remove action
                    type: "POST",
                    data: { taskID: taskId }, // Send task ID as data
                    success: function (response) {
                        if (response.success) {
                            alert("Task removed successfully");// Task removed successfully, update UI as needed
                            $(e.target).closest("tr").remove();// Optionally, update UI (remove task from list, etc.)
                        }
                        else {
                            alert("Error: " + response.message); // Handle removal failure
                        }
                    },
                    error: function (xhr, status, error) {
                        // Handle AJAX error
                        alert("Error: " + error);
                    }
                });
        });

        $('.get-update-task').click(function () {
            $('#taskId').val(taskId) // Retrieve task ID
            // Store the task ID in a hidden input in the modal
        });
    });
</script>

@* Jquery Event Handlers *@
<script>
    
    // $.urlParam = function (name) {
    //     var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
    //     return results[1] || 0;
    // }
    // Load Data in Table when document is ready
    $(document).ready(function () {
        loadData();
    });
    // Load Data function
    function loadData() {
        let priorityLabels=0;
        $.ajax({
            url: "/Task/GetPriorityNames", // Replace with your actual controller/action URL
            dataType: "json",
            success: function (data) {
                priorityLabels = data;
            }
        });
        $.ajax({
            url: '/Task/GetAll/' + @ViewBag.ProjectID,
            type: 'GET',
            success: function (result) {
                var openTasks = '';
                var completedTasks = '';
                $.each(result.data, function (key, item) {
                    if (item.StatusName != "Done") {
                        openTasks += '<tr>';
                        openTasks += '<th><span class="ms-2" > ' + item.StatusName + '</span></th>';
                        openTasks += '<td class="align-middle"><span>' + item.Description + '</span></td>';
                        openTasks += '<td class="align-middle"><h6 class="mb-0" > <span class="badge ' + item.ProjectID + '" >' + priorityLabels[item.PriorityID - 1] + ' priority </span></h6></td>';
                        openTasks += '<td class="align-middle"><span>' + item.DueDate + '</span></td>';
                        openTasks += '<td class="align-middle">';
                        openTasks += '<a href = "#!" class="text-decoration-none" data-mdb-toggle="tooltip" onclick="return ConfirmCompleteTask(' + item.ID + ');" title = "Done" >';
                        openTasks += '<i class="bi fs-5 ps-1 text-success bi-check2-circle" > </i></a>';
                        openTasks += '<a href = "#!" class="text-decoration-none get-update-task" onclick="return getbyID(' + item.ID + ')" data-mdb-toggle="tooltip" title = "Edit" >';
                        openTasks += '<i class="bi fs-5 ps-1 text-warning bi-pencil-square" > </i></a>';
                        openTasks += "<a href = '#' class='text-decoration-none get-task' onclick='return ConfirmDelete(" + item.ID + ",\"" + item.Description + "\"" + ",\"" + item.ProjectName + "\"" + ",\"" + item.StatusName + "\");'title='Remove'>";
                        // console.log('<a href = "#" class="text-decoration-none get-task" onclick="return ConfirmDelete(' + item.ID + ',' + item.Description + ');" title="Remove">')
                        openTasks += '<i class="bi fs-5 ps-1 text-danger bi-trash" > </i></a></td>';
                        openTasks += '</tr>';
                    }
                    else {
                        completedTasks += '<tr>';
                        completedTasks += '<th><span class="ms-2" > ' + item.StatusName + '</span></th>';
                        completedTasks += '<td class="align-middle"><span>' + item.Description + '</span></td>';
                        completedTasks += '<td class="align-middle"><h6 class="mb-0" > <span class="badge ' + item.ProjectID + '" >' + priorityLabels[item.PriorityID - 1] + ' priority </span></h6></td>';
                        completedTasks += '<td class="align-middle"><span>' + item.DueDate + '</span></td>';
                        completedTasks += '<td class="align-middle">';
                        completedTasks += '<a href = "#!" class="text-decoration-none get-update-task" onclick="return getbyID(' + item.ID + ')" data-mdb-toggle="tooltip" title = "Edit" >';
                        completedTasks += '<i class="bi fs-5 ps-1 text-warning bi-pencil-square" > </i></a>';
                        completedTasks += "<a href = '#' class='text-decoration-none get-task' onclick='return ConfirmDelete(" + item.ID + ",\"" + item.Description + "\"" + ",\"" + item.ProjectName + "\"" + ",\"" + item.StatusName + "\");'title='Remove'>";
                        // console.log('<a href = "#" class="text-decoration-none get-task" onclick="return ConfirmDelete(' + item.ID + ',' + item.Description + ');" title="Remove">')
                        completedTasks += '<i class="bi fs-5 ps-1 text-danger bi-trash" > </i></a></td>';
                        completedTasks += '</tr>';
                    }
                    
                });
                $('.opentasks').html(openTasks);
                $('.completedtasks').html(completedTasks);
                
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
    // Add Employee Data Function
    function Add() {
        var task = {
            Description: $('#Description').val(),
            PriorityID: $('#PriorityID').val(),
            DueDate: $('#DueDate').val(),
            ProjectID: $('#ProjectID').val(),
            StatusID: $('#StatusID').val()
        };
        $.ajax({
            url: '/Task/Add',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(task),
            success: function (result) {
                loadData();
                $('#myModal').modal('hide');
                // alert(result.message);
            },
            error: function (errormessage) {
                alert(errormessage.message);
            }
        });
    }
    // Function for getting the Data Based upon Employee ID
    function getbyID(TaskID) {
        $.ajax({
            url: "/Task/GetById/" + TaskID,
            type: "GET",
            contentType: 'application/json',
            success: function (result) {
                $('#ID').val(result.data.ID),
                $('#Description').val(result.data.Description),
                $('#PriorityID').val(result.data.PriorityID),
                $('#DueDate').val(result.data.DueDate),
                $('#ProjectID').val(result.data.ProjectID),
                $('#StatusID').val(result.data.StatusID)
                $('#myModal').modal('show');
                $('#btnUpdate').show();
                $('#btnAdd').hide();
                $('#myModalLabelAddEmployee').hide();
                $('#myModalLabelUpdateEmployee').show();
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
        return false;
    }
    // Function for updating employee's record
    function Update() {
        var task = {
            ID: $('#ID').val(),
            Description: $('#Description').val(),
            PriorityID: $('#PriorityID').val(),
            DueDate: $('#DueDate').val(),
            ProjectID: $('#ProjectID').val(),
            StatusID: $('#StatusID').val()
        };
        $.ajax({
            url: '/Task/Update',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(task),
            success: function (response) {
                loadData();
                $('#myModal').modal('hide');
                $('#ID').val(""),
                $('#Description').val(""),
                $('#PriorityID').val(""),
                $('#DueDate').val(""),
                $('#ProjectID').val(""),
                $('#StatusID').val("")
                // alert(response.message);
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
    // Function for showing the Popup before deletion
    // function ConfirmDelete(TaskID) {
    //     $.ajax({
    //         url: "/Task/GetById/" + TaskID,
    //         type: "GET",
    //         contentType: 'application/json',
    //         success: function (result) {
    //             // console.log("/Task/GetById/" + TaskID)
    //             $("#lblDeleteProject").html("<b>Name: </b>" + result.data.Project.Title);
    //             $("#lblDeleteStatus").html("<b>Department: </b>" + result.data.StatusName);
    //             $("#lblDeleteDescription").html("<b>Salary: </b>" + result.data.Description);
    //             $('#hiddenTaskId').val(TaskID);
    //             $('#deleteModal').modal('show');
    //         },
    //         error: function (errormessage) {
    //             alert(errormessage.responseText);
    //         }
    //     });
    // }
    
    function ConfirmCompleteTask(TaskID) {
        // console.log("/Task/GetById/" + TaskID)
        $('#hiddenTaskId').val(TaskID);
        $('#completeTaskModal').modal('show');
    }
    function Complete() {
        var ID = $('#hiddenTaskId').val();
        $.ajax({
            url: "/Task/CompleteTask/" + ID,
            type: 'POST',
            contentType: 'application/json',
            success: function (result) {
                loadData();
                $('#completeTaskModal').modal('hide');
                // alert(result.message);
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }


    function ConfirmDelete(TaskID, Description, ProjectName, StatusName) {
        // console.log("/Task/GetById/" + TaskID)
        $("#lblDeleteProject").html("<b>Project: </b>" + ProjectName);
        $("#lblDeleteStatus").html("<b>Task Discreption: </b>" + Description);
        $("#lblDeleteDescription").html("<b>Status: </b>" + StatusName);
        $('#hiddenTaskId').val(TaskID);
        $('#deleteModal').modal('show');
    }


    // Function for deleting the Task
    function Delete() {
        var ID = $('#hiddenTaskId').val();
        $.ajax({
            url: "/Task/DeleteTask/" + ID,
            type: 'POST',
            contentType: 'application/json',
            success: function (result) {
                loadData();
                $('#deleteModal').modal('hide');
                // alert(result.message);
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
    // Function for clearing the textboxes
    function Clear() {
        $('#ID').val(""),
        $('#Description').val(""),
        $('#PriorityID').val(1),
        $('#DueDate').val(""),
        $('#ProjectID').val(1),
        $('#StatusID').val(1)
    }
</script>
@* Offf dayı sen naptın ya *@